<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Authors>yswenli</Authors>
    <Company>yswenliyswenli</Company>
    <Description>Wenli.Config.ApolloClient说明：

一、Wenli.Config.ApolloClient是根据了解官方驱动流程后，结合项目实际情况重构的apollo配置中心客户端，主要解决以下几个问题：
1.无需在c盘配置目录
2.可以连接多个apollo服务中心、每一个中心可以使用多个appid的配置
3.不再使用onchange事件来通知更新，而是增加实体类生成工具，用类的属性来实现自动更新，以方便于项目中使用
4.增加更加详细的配置，以适应不同项目环境的需求，比如长轮询时间、次数等
5.根据实际情况修改配置读取顺序为：优先使用appsetting中的配置、其次使用apolloclient本地配置，最后使用apolloservice的配置

二、ApolloServiceModelClassGenerater 是Wenli.Config.ApolloClient的代码生成工具

三、ApolloClient.Test以及ApolloWebTest为Wenli.Config.ApolloClient的使用测试简例</Description>
    <PackageReleaseNotes>Wenli.Config.ApolloClient说明：

一、Wenli.Config.ApolloClient是根据了解官方驱动流程后，结合项目实际情况重构的apollo配置中心客户端，主要解决以下几个问题：
1.无需在c盘配置目录
2.可以连接多个apollo服务中心、每一个中心可以使用多个appid的配置
3.不再使用onchange事件来通知更新，而是增加实体类生成工具，用类的属性来实现自动更新，以方便于项目中使用
4.增加更加详细的配置，以适应不同项目环境的需求，比如长轮询时间、次数等
5.根据实际情况修改配置读取顺序为：优先使用appsetting中的配置、其次使用apolloclient本地配置，最后使用apolloservice的配置

二、ApolloServiceModelClassGenerater 是Wenli.Config.ApolloClient的代码生成工具

三、ApolloClient.Test以及ApolloWebTest为Wenli.Config.ApolloClient的使用测试简例</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/yswenli/Wenli.Config.ApolloClient</PackageProjectUrl>
    <RepositoryUrl>https://github.com/yswenli/Wenli.Config.ApolloClient</RepositoryUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageTags>ApolloClient,Apollo,Config</PackageTags>
    <Copyright>yswenli</Copyright>
    <Version>1.0.1.3</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Reflection.Emit.ILGeneration" Version="4.7.0" />
    <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0" />
    <PackageReference Include="System.Security.Permissions" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
